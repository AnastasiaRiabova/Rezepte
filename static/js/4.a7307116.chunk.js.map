{"version":3,"sources":["components/SearchForm/SearchForm.module.css","components/NutrientsCount/NutrientsCount.module.css","components/MainSection/MainSection.module.css","Redux/Recipe/recipe-operations.js","Redux/Recipe/recipe-selectors.js","components/NutrientsCount/NutrientsCount.js","components/SearchForm/SearchForm.js","Redux/UserInfo/user-operation.js","components/MainSection/MainSection.js"],"names":["module","exports","getAllRecipes","search","page","dispatch","axios","defaults","baseURL","headers","common","Authorization","action","getRecipesRequest","get","then","response","getRecipesSuccess","data","catch","error","getRecipesError","getRecipe","state","recipe","hits","NutrientsCount","index","useState","input","setInput","useSelector","selectors","toCountNutrients","nutrient","Math","round","totalWeight","className","styles","fontsStyle","autoComplete","id","searchInput","type","name","value","placeholder","onChange","e","target","letterStyle","label","calories","totalNutrients","FAT","quantity","CHOCDF","PROCNT","SearchForm","inputValue","getIndex","nextPage","setState","currentTarget","attributes","toGetInputValue","onSubmit","preventDefault","props","getRecipes","toNextPage","a","prevstate","toPrevPage","console","log","style","position","this","onInput","button","listStyle","listView","map","el","inx","itemView","onClick","src","image","alt","textStyle","join","linkView","ingredients","ind","text","href","url","buttonStyle","Button","color","calculator","Component","mapDispatchToProps","operations","connect","getUser","userData","actions","getUserInfoRequest","getUserInfoSuccess","getUserInfoError","MainSection","useDispatch","isAuth","getUserInfo","useCallback","useEffect"],"mappings":"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","file":"static/js/4.a7307116.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchForm_searchInput__3k4rO\",\"calculator\":\"SearchForm_calculator__1VE4O\",\"position\":\"SearchForm_position__3efB2\",\"linkView\":\"SearchForm_linkView__1WVtm\",\"listStyle\":\"SearchForm_listStyle__3Rq3q\",\"listView\":\"SearchForm_listView__2miS8\",\"itemView\":\"SearchForm_itemView__-1ZVP\",\"button\":\"SearchForm_button__1AUaN\",\"textStyle\":\"SearchForm_textStyle__1BVFb\",\"buttonStyle\":\"SearchForm_buttonStyle__1mm7P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontsStyle\":\"NutrientsCount_fontsStyle__2BFI9\",\"searchInput\":\"NutrientsCount_searchInput__VsN9_\",\"letterStyle\":\"NutrientsCount_letterStyle__ZqGAz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"position\":\"MainSection_position__3Qwhq\"};","import axios from 'axios';\nimport action from './recipe-actions';\n\nconst getAllRecipes = (search, page) => dispatch => {\n  axios.defaults.baseURL = 'https://api.edamam.com';\n  axios.defaults.headers.common.Authorization = '';\n  // console.log(search);\n  dispatch(action.getRecipesRequest());\n\n  axios\n    .get(\n      `/search?q=${search}&app_id=4201534d&app_key=ac730a8b8a048ad137d8d0e0fc6fbb98&from=${page}&to=${\n        page + 10\n      }`,\n    )\n    .then(response => dispatch(action.getRecipesSuccess(response.data)))\n    .catch(error => dispatch(action.getRecipesError(error)));\n};\n\nexport default getAllRecipes;\n","const getRecipe = state => state.recipe.hits;\n\nexport default getRecipe;\n","import { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport selectors from '../../Redux/Recipe/recipe-selectors';\nimport styles from './NutrientsCount.module.css';\n\nfunction NutrientsCount({ index }) {\n  const [input, setInput] = useState('');\n  const getRecipe = useSelector(selectors);\n\n  function toCountNutrients(nutrient) {\n    if (getRecipe && index) {\n      return Math.round(\n        (+input * nutrient) / Math.round(getRecipe[index].recipe.totalWeight),\n      );\n    }\n  }\n\n  function handleInput(e) {\n    setInput(e.target.value);\n  }\n\n  return (\n    <div className={styles.fontsStyle}>\n      <p>\n        Choose the Dish and <br />\n        enter the quantity you prefer to eat:\n      </p>\n      <input\n        autoComplete=\"off\"\n        id={styles.searchInput}\n        type=\"text\"\n        name=\"input\"\n        value={input}\n        placeholder=\"gram\"\n        onChange={handleInput}\n      />\n      <p className={styles.letterStyle}>\n        {getRecipe && index && getRecipe[index].recipe.label}\n      </p>\n      <p>\n        Total Weight:\n        <span className={styles.letterStyle}>\n          {' '}\n          {getRecipe &&\n            index &&\n            Math.round(getRecipe[index].recipe.totalWeight)}{' '}\n          gr\n        </span>\n      </p>\n      <p>\n        Calories:\n        <span className={styles.letterStyle}>\n          {' '}\n          {input && index\n            ? toCountNutrients(Math.round(getRecipe[index].recipe.calories))\n            : getRecipe &&\n              index &&\n              Math.round(getRecipe[index].recipe.calories)}{' '}\n          kkal\n        </span>\n      </p>\n      <p>\n        Fat:\n        <span className={styles.letterStyle}>\n          {input && index\n            ? toCountNutrients(\n                Math.round(getRecipe[index].recipe.totalNutrients.FAT.quantity),\n              )\n            : getRecipe &&\n              index &&\n              Math.round(getRecipe[index].recipe.totalNutrients.FAT.quantity)}\n          gr\n        </span>\n      </p>\n      <p>\n        Carbs:\n        <span className={styles.letterStyle}>\n          {input && index\n            ? toCountNutrients(\n                Math.round(\n                  getRecipe[index].recipe.totalNutrients.CHOCDF.quantity,\n                ),\n              )\n            : getRecipe &&\n              index &&\n              Math.round(\n                getRecipe[index].recipe.totalNutrients.CHOCDF.quantity,\n              )}{' '}\n          gr\n        </span>\n      </p>\n      <p>\n        Protein:\n        <span className={styles.letterStyle}>\n          {input && index\n            ? toCountNutrients(\n                Math.round(\n                  getRecipe[index].recipe.totalNutrients.PROCNT.quantity,\n                ),\n              )\n            : getRecipe &&\n              index &&\n              Math.round(\n                getRecipe[index].recipe.totalNutrients.PROCNT.quantity,\n              )}{' '}\n          gr\n        </span>\n      </p>\n    </div>\n  );\n}\nexport default NutrientsCount;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport 'materialize-css';\nimport operations from '../../Redux/Recipe/recipe-operations';\nimport style from './SearchForm.module.css';\nimport getRecipe from '../../Redux/Recipe/recipe-selectors';\nimport NutrientsCount from '../NutrientsCount/NutrientsCount';\nimport Button from '../UIComponents/Button/Button';\n\nexport class SearchForm extends Component {\n  state = {\n    inputValue: '',\n    getIndex: '',\n    nextPage: 0,\n  };\n\n  getIndex = e => {\n    this.setState({ getIndex: e.currentTarget.attributes.data.value });\n  };\n  toGetInputValue = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.getRecipes(this.state.inputValue, this.state.nextPage);\n    // this.setState({ inputValue: '' });\n  };\n  toNextPage = async () => {\n    await this.setState(prevstate => {\n      return { nextPage: prevstate.nextPage + 10 };\n    });\n    this.props.getRecipes(this.state.inputValue, this.state.nextPage);\n  };\n  toPrevPage = async () => {\n    if (this.state.nextPage > 0) {\n      await this.setState(prevstate => {\n        return { nextPage: prevstate.nextPage - 10 };\n      });\n      this.props.getRecipes(this.state.inputValue, this.state.nextPage);\n    } else {\n      console.log('not');\n    }\n  };\n  render() {\n    return (\n      <>\n        {/* <button onClick={this.toNextPage}>click me{this.state.nextPage}</button>\n        <button onClick={this.toPrevPage}>prev</button> */}\n        <div className={style.position}>\n          <form action=\"\" onSubmit={this.onSubmit}>\n            <input\n              autoComplete=\"off\"\n              id={style.searchInput}\n              type=\"text\"\n              onInput={this.toGetInputValue}\n              value={this.state.inputValue}\n              placeholder=\"Enter what do you want to eat today\"\n            />\n            <button className={style.button}>Search</button>\n          </form>\n          <div className={style.listStyle}>\n            <ul className={style.listView}>\n              {this.props.recipe &&\n                this.props.recipe.map((el, inx) => (\n                  <li\n                    className={style.itemView}\n                    key={el.recipe.calories}\n                    data={inx}\n                    onClick={this.getIndex}\n                  >\n                    {/* <div className=\"row\"> */}\n                    <div className=\"col s4 m8\">\n                      <div className=\"card\">\n                        <div className=\"card-image\">\n                          <img src={el.recipe.image} alt=\"food\" />\n                          <span\n                            className={['card-title', style.textStyle].join(\n                              ' ',\n                            )}\n                          >\n                            {el.recipe.label}\n                          </span>\n                        </div>\n                        <div className=\"card-content\">\n                          <ul className={style.linkView}>\n                            Ingredients:\n                            {el.recipe.ingredients.map((el, ind) => (\n                              <li key={ind}>{el.text}</li>\n                            ))}\n                          </ul>\n                        </div>\n                        <div className=\"card-action\">\n                          <a href={el.recipe.url} target=\"_blanc\">\n                            Get full recipe here\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                    {/* </div> */}\n                  </li>\n                ))}\n            </ul>\n            <div className={style.buttonStyle}>\n              {this.state.nextPage > 0 && (\n                <Button onClick={this.toPrevPage} label=\"back\" color=\"white\" />\n              )}\n            </div>\n            <div className={style.buttonStyle}>\n              {this.state.inputValue && (\n                <Button\n                  onClick={this.toNextPage}\n                  label=\"Next Page\"\n                  color=\"orange\"\n                />\n              )}\n            </div>\n          </div>\n          <div className={style.calculator}>\n            <NutrientsCount index={this.state.getIndex} />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  recipe: getRecipe(state),\n});\n\nconst mapDispatchToProps = {\n  getRecipes: operations,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\n","import axios from 'axios';\nimport actions from './user-actions';\n\nconst getUser = userData => async dispatch => {\n  axios.defaults.baseURL = 'http://slimmom-backend.herokuapp.com';\n  axios.defaults.headers.common.Authorization = userData;\n  dispatch(actions.getUserInfoRequest());\n  axios\n    .get('/user')\n    .then(response => dispatch(actions.getUserInfoSuccess(response.data)))\n    .catch(error => dispatch(actions.getUserInfoError(error)));\n};\n\nexport default getUser;\n","import { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect, useCallback } from 'react';\nimport SearchForm from '../SearchForm/SearchForm';\n// import HomeView from '../View/HomeView/HomeView';\nimport styles from './MainSection.module.css';\nimport getUser from '../../Redux/UserInfo/user-operation';\nimport selectors from '../../Redux/Auth/auth-selectors';\n\nfunction MainSection() {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(selectors);\n  // console.log(isAuth);\n  const getUserInfo = useCallback(() => isAuth && dispatch(getUser(isAuth)), [\n    dispatch,\n    isAuth,\n  ]);\n  useEffect(() => {\n    getUserInfo();\n  }, [getUserInfo]);\n\n  return (\n    <div className={styles.position}>\n      <SearchForm />\n      {/* <HomeView /> */}\n    </div>\n  );\n}\nexport default MainSection;\n"],"sourceRoot":""}